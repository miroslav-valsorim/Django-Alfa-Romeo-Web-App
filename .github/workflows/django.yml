name: Alfa Romeo Django Web App CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
          POSTGRES_DB: django_test_DB

    # strategy:
    #   max-parallel: 4
    #   matrix:   // allows you to define multiple configurations that you want to test. Each configuration will create a separate job, and they will be run in parallel if possible.
    #     python-version: [3.10.x]   // EXAMPLE: python-version: [3.9.x, 3.10.x, 3.11.x]  //  os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10.x
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.x

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r alfa_romeo_web/requirements.txt

    - name: Set up Database
      run: |
        sudo apt-get install -y postgresql-client
        psql -h localhost -U django -d postgres -c "CREATE DATABASE django_test_DB;"
      env:
        PGPASSWORD: django

    - name: Run Django Migrations
      run: |
        python alfa_romeo_web/manage.py migrate
      env:
        DATABASE_URL: postgres://django:django@localhost:5432/django_test_DB

    - name: Wait 30 sec for server to be ready
      run: sleep 30 

    - name: Collect Static Files
      run : |
        cd alfa_romeo_web
        python manage.py collectstatic --noinput

    - name: Install Playwright browsers
      run: |
        playwright install
        # playwright install-deps
        # python -m playwright install --with-deps

    - name: Run Django Project
      run: |
        python alfa_romeo_web/manage.py runserver 127.0.0.1:8000 &
      env:
        DATABASE_URL: postgres://django:django@localhost:5432/django_test_DB

    - name: Wait 30 sec for server to be ready
      run: sleep 30 

    - name: Check server status
      run: curl -I http://localhost:8000/

    - name: Run Unit Tests
      run: |
        cd alfa_romeo_web
        python manage.py test
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DATABASE_URL: postgres://django:django@localhost:5432/django_test_DB

    - name: Run UI Tests
      run: |
        python -m pytest alfa_romeo_web/tests/UI_tests   # this test should be fixed ! For now it just runs localy !
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DATABASE_URL: postgres://django:django@localhost:5432/django_test_DB

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # will deploy only if the pipeline is executed from main branch
    needs: build-test
    steps:
        - uses: actions/checkout@v4
        - uses: JorgeLNJunior/render-deploy@v1.4.4
          with:
            service_id: ${{ secrets.MY_RENDER_SERVICE_ID }}
            api_key: ${{ secrets.MY_RENDER_API_KEY }}
            wait_deploy: true 